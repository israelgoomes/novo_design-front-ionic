{"version":3,"sources":["../../src/pages/email-generate/email-generate.module.ts","../../src/pages/email-generate/email-generate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AAUrD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QARnC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;aAC5C;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACe;AACI;AACQ;AACP;AAQ9D;IAME,2BACS,OAAsB,EACtB,SAAoB,EACpB,aAA4B,EAC3B,WAA6B;QAH9B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAAkB;QATvC,YAAO,GAAG,EAAE,CAAC;QACb,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAwB,IAAI,KAAK,EAAgB,CAAC;QAC/D,gBAAW,GAAG,EAAE;QAQd,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IACK,gCAAI,GAAV;;;;;;wBACM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,+EAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC3E,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;;;;wBAErB,qBAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;;wBAAzD,MAAM,GAAG,SAAgD;wBAC7D,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;4BACnB,IAAI,CAAC,aAAa,GAAwB,MAAM,CAAC,IAAI,CAAC;4BACtD,GAAG,EAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gCACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gCACvD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;4BACrD,CAAC;4BACD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACvD,CAAC;;;;;;;;;KAEJ;IAED,qCAAS,GAAT;QACE,IAAI,KAAK,GAAG;YACV,EAAE,EAAE,CAAC,KAAG,IAAI,CAAC,WAAa,CAAC;YAC3B,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,OAAO;SACb,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IA9CU,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;6EAQ+B;YACX,mFAAS;YACL,sFAAa;YACd,cAAgB;OAV5B,iBAAiB,CA+C7B;IAAD,CAAC;AAAA;SA/CY,iBAAiB,gB","file":"15.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmailGeneratePage } from './email-generate';\n\n@NgModule({\n  declarations: [\n    EmailGeneratePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EmailGeneratePage),\n  ],\n})\nexport class EmailGeneratePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-generate/email-generate.module.ts","import { Component } from \"@angular/core\";\nimport { IonicPage, NavController, NavParams } from \"ionic-angular\";\nimport { EmailComposer } from \"@ionic-native/email-composer\";\nimport { ClientesProvider } from \"../../providers/clientes/clientes\";\nimport { configHelper } from \"../../app/helpers/configHelper\";\nimport { clienteModel } from \"../../app/models/clienteModel\";\n\n@IonicPage()\n@Component({\n  selector: \"page-email-generate\",\n  templateUrl: \"email-generate.html\"\n})\nexport class EmailGeneratePage {\n  subject = \"\";\n  body = \"\";\n  listaClientes: Array<clienteModel> = new Array<clienteModel>();\n  listaEmails = []\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public emailComposer: EmailComposer,\n    private clienteSrvc: ClientesProvider\n  ) {\n    this.load();\n  }\n\n  ionViewDidLoad() {\n    console.log(\"ionViewDidLoad EmailGeneratePage\");\n  }\n  async load(): Promise<void> {\n    let user = JSON.parse(localStorage.getItem(configHelper.storageKeys.user));\n    console.log(\"Usu√°rio logado\", user);\n    try {\n      let result = await this.clienteSrvc.clientebyIdUser(user._id);\n      if (result.success) {\n        this.listaClientes = <Array<clienteModel>>result.data;\n        for(let i = 0; i < this.listaClientes.length; i++){\n          console.log('Percorrendo o for',this.listaClientes[i]);\n          this.listaEmails.push(this.listaClientes[i].email);\n        } \n        console.log(\"Emails dos clientes\", this.listaEmails);\n      }\n    } catch (error) {}\n  }\n\n  sendEmail() {\n    let email = {\n      to: [`${this.listaEmails}`],\n      cc: [],\n      bcc: [],\n      attachment: [],\n      subject: this.subject,\n      body: this.body,\n      isHtml: false,\n      app: \"Gmail\"\n    };\n    this.emailComposer.open(email);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email-generate/email-generate.ts"],"sourceRoot":""}